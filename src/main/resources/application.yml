server:
  port: 0
eureka:
  client:
    service-url:
      defaultZone: http://edureka-service:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${instance-id:${random.value}}
spring:
  application:
    name: content-api
  sleuth:
    sampler:
      probability: 1
  zipkin:
    base-url: http://zipkin-server:9411
    sender:
      type: web

  data:
    mongodb:
      #host: mymongodb
      host: localhost
      #port: 27017
      port: 27018
      database: content-api
  kafka:
    bootstrap-servers: kafka-server:9092
    producer:
      topic: upload-content-events-v1
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      acks: 1
jwt:
  secretKey: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789~!@#$%^&*()_+=';?><
logging:
  level:
    com.mypractice.content.api: INFO
    org.springframework.web: INFO
    org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

springdoc:
  api-docs:
    path: /content-openapi

management:
  endpoints:
    web:
      exposure:
        include: health, httptrace,beans,routes,info
